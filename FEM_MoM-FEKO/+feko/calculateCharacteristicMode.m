function tt = calculateCharacteristicMode(...
    CMA_SD, freqIndex, modeIndex, solver, options)
%% CALCULATECHARACTERISTICMODE: low-level wrapper for FEKO_CM.m
% 
% Inputs:
%   CMA_SD    ~ data structure generated by FEKO_SD.m containing all
%               informations neede (scattering dyadics, characteristic
%               vectors, characteristic numbers, etc.).
%   freqIndex ~ frequency index used for the mode evaluation
%   modeIndex ~ number of characteristic mode within CMA_SD structure
%   solver    ~ EM solver to be used in FEKO (see feko.getSolverOption)
%   options   ~ additional options, see FEKO_CM.m
% 
% Outputs:
%   tt ~ total computational time
% 
% (c) 2022, Miloslav Capek, CTU in Prague, miloslav.capek@fel.cvut.cz

deleteAuxFiles    = options.deleteAuxFiles;
preFEKOfileName   = options.preFEKOfileName;
minThresholdToUse = options.minThresholdToUse;
numberOfModelUsed = options.numberOfModelUsed;

thisFn = CMA_SD.Fn(:, modeIndex, freqIndex);

% Wavenumber
const = bin.constants();
f0    = const.c0*CMA_SD.k0(freqIndex)/(2*pi);

% Excitation via plane waves
r2d   = @(x) 180*x/pi;

amp   = abs(thisFn);
phase = r2d(angle(thisFn));
PW    = [amp, phase, CMA_SD.PW];

% If desired, use only a given subset of plane waves
usedPlaneWaves = abs(thisFn)/max(abs(thisFn)) > minThresholdToUse;
PW = PW(usedPlaneWaves, :);

t0  = tic();

if isempty(CMA_SD.materials) || ~iscell(CMA_SD.materials{1})
    % Assume nondispersive material defined once for all frequencies
    Material = CMA_SD.materials;
else
    % Assume dispersive material defined at each frequency
    Material = CMA_SD.materials{freqIndex};    
end

% Prepare PRE FEKO wrapper for evaluation of a given characteristic mode
feko.preFEKO_nPW_1FF_charMode(preFEKOfileName, ...
    CMA_SD.model{numberOfModelUsed}, Material, f0, PW, solver);

%% Run PRE-feko file
clc;
dos(['runfeko ' preFEKOfileName '.pre --execute-prefeko -np all']);
        
%% Clean up unnecessary files
if deleteAuxFiles
    feko.cleanupFEKOsolverFiles(preFEKOfileName, {'.pre', '.fek', '.out'});
end

tt = toc(t0);